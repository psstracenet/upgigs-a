document.addEventListener("DOMContentLoaded", () => {
  console.log("‚úÖ DOM loaded and admin.js running");

  // üö™ Logout handler
  const logoutLink = document.getElementById("logout-link");
  if (logoutLink) {
    logoutLink.addEventListener("click", (e) => {
      e.preventDefault();
      localStorage.removeItem("jwtToken");
      window.location.href = "/";
    });
  }

  // ‚ùå Cancel button removes the form
  document.querySelectorAll(".cancel-btn").forEach((btn) => {
    btn.addEventListener("click", () => {
      const form = btn.closest("form.gig-card");
      if (form) {
        form.classList.add("dismiss");
        setTimeout(() => form.remove(), 300);
      }
    });
  });

  // üé§ Artist Dropdown ‚Äì Load selected artist's gigs securely
  // üìÇ public/js/admin.js

  document.addEventListener("DOMContentLoaded", () => {
    console.log("‚úÖ DOM loaded and admin.js running");

    // üö™ Logout button handler
    const logoutLink = document.getElementById("logout-link");
    if (logoutLink) {
      logoutLink.addEventListener("click", (e) => {
        e.preventDefault();
        localStorage.removeItem("jwtToken");
        window.location.href = "/";
      });
    }

    // ‚ùå Cancel buttons: remove gig-card form smoothly
    document.querySelectorAll(".cancel-btn").forEach((btn) => {
      btn.addEventListener("click", () => {
        const form = btn.closest("form.gig-card");
        if (form) {
          form.classList.add("dismiss");
          setTimeout(() => form.remove(), 300);
        }
      });
    });

    // üé§ Artist dropdown: fetch new artist's data securely
    const artistDropdown = document.getElementById("artist-switch");

    if (artistDropdown) {
      console.log("üéß Found #artist-switch dropdown");

      // Optional user interaction tracker (can be removed if not needed)
      let userInitiated = false;

      artistDropdown.addEventListener("mousedown", () => {
        userInitiated = true;
      });

      artistDropdown.addEventListener("change", async () => {
        const artist = artistDropdown.value;
        console.log("üéØ Artist dropdown changed to:", artist); // üîÑ UPDATED
        userInitiated = false;

        try {
          const response = await fetch(`/admin?artist=${artist}`, {
            method: "GET",
            headers: {
              "X-Requested-With": "XMLHttpRequest",
            },
          });

          const html = await response.text();
          console.log(
            "üì¶ Fetched partial /admin response. Length:",
            html.length
          ); // üîÑ UPDATED

          console.log("üìÑ HTML from fetch:\n", html); // ‚úÖ Show raw response

          const tempDoc = new DOMParser().parseFromString(html, "text/html");
          const updatedSection = tempDoc.getElementById("gig-section");

          if (updatedSection) {
            document.getElementById("gig-section").replaceWith(updatedSection);
            console.log("‚úÖ Gig section replaced for:", artist); // üîÑ UPDATED
          } else {
            console.warn("‚ùå #gig-section not found in partial HTML.");
            showToast("‚ö†Ô∏è Could not load updated gigs");
          }
        } catch (err) {
          console.error("‚ùå Error during artist switch fetch:", err); // üîÑ UPDATED
          showToast("‚ùå Error switching artist.");
        }
      });
      function attachArtistDropdownListener() {
        const artistDropdown = document.getElementById("artist-switch");

        if (!artistDropdown) {
          console.warn("‚ö†Ô∏è #artist-switch not found when attaching listener.");
          return;
        }

        // Clear old listeners by cloning the element (optional safety)
        const clone = artistDropdown.cloneNode(true);
        artistDropdown.parentNode.replaceChild(clone, artistDropdown);

        clone.addEventListener("change", async () => {
          const artist = clone.value;
          console.log("üéØ Artist dropdown changed to:", artist);

          try {
            const response = await fetch(`/admin?artist=${artist}`, {
              method: "GET",
              headers: {
                "X-Requested-With": "XMLHttpRequest",
              },
            });

            const html = await response.text();
            const tempDoc = new DOMParser().parseFromString(html, "text/html");
            const updatedSection = tempDoc.getElementById("gig-section");

            if (updatedSection) {
              document
                .getElementById("gig-section")
                .replaceWith(updatedSection);
              console.log("‚úÖ Gig section updated for:", artist);
              attachArtistDropdownListener(); // ‚úÖ Reattach after replacing content
            } else {
              console.warn("‚ùå #gig-section not found in response.");
            }
          } catch (err) {
            console.error("‚ùå Error switching artist:", err);
          }
        });
      }
    }
  });
});
